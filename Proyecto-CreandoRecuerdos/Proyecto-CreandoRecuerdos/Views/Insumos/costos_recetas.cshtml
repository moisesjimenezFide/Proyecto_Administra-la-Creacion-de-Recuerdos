@model Proyecto_CreandoRecuerdos.Models.InsumosModel


@{
    ViewData["Title"] = "Creando Recuerdos - Gestión de Costos de Recetas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool editando = ViewBag.Editando ?? false;
    string titulo = editando ? "Edición de Receta" : "Registro de Receta";
    string textoBoton = editando ? "Actualizar" : "Agregar";
    string accion = editando ? "EditarReceta" : "CrearReceta";
}

@section Styles {
    <link href="~/Templates/css/menu.css" rel="stylesheet" />
    <style>
        label.form-label {
            font-weight: bold;
        }

        .table-responsive {
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

        .table th {
            font-size: 1rem;
            font-weight: bold;
        }

        .table th, .table td {
            min-width: 120px;
            white-space: nowrap;
            word-break: break-word;
            padding: 0.5rem;
            vertical-align: middle;
            font-size: 0.95rem;
        }

        .btn-sm {
            font-size: 0.8rem;
            padding: 0.3rem 0.6rem;
        }

        .btn {
            font-size: 0.9rem;
            padding: 0.25rem 0.5rem;
        }

        .btn-custom-pink {
            background-color: #E27AB0;
            color: white;
            border: none;
        }

            .btn-custom-pink:hover {
                background-color: #d66da3;
                color: white;
            }
    </style>
}

<div class="container my-5 text-center">
    <h2 class="mb-4" style="font-family: 'Sono';">
        <i class="fas fa-calculator me-2"></i> Gestión de Costos de Recetas
    </h2>
</div>

<!-- Formulario de búsqueda -->
<form method="get" action="@Url.Action("costos_recetas", "Insumos")" class="mt-4">
    <h4><strong>Búsqueda de Recetas</strong></h4>
    <div class="input-group mb-4">
        <input type="text" name="search" class="form-control" placeholder="Buscar por cualquier campo..." value="@ViewBag.Search" />
        <button type="submit" class="fas fa-search ms-1 btn btn-custom-pink"></button>
    </div>
</form>

<!-- Formulario de registro/edición -->
<div class="container">
    <h4 class="mb-3"><strong>@titulo</strong></h4>
    @using (Html.BeginForm(accion, "Insumos", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="mb-3 text-start">
            <label for="nombre" class="form-label">Nombre</label>
            <input type="text" name="nombre" id="nombre" class="form-control" required="required" />
        </div>

        <div class="mb-3 text-start">
            <label for="porcion" class="form-label">Porción</label>
            <input type="number" name="porcion" id="porcion" class="form-control" required="required" />
        </div>

        <h4>Materias Primas Utilizadas</h4>
        <div id="materias_primas-container">
            <div class="row fila-insumo template-materia_prima" style="display: none;">
                <div class="col-md-4">
                    <label for="MateriaPrimaSeleccionada">Nombre</label>
                    @Html.DropDownList("MateriaPrimaSeleccionada", ViewBag.MateriasPrimas as SelectList, "Seleccione una materia prima", new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label for="MateriaPrimaSeleccionada">Cantidad</label>
                    <input type="number" name="CantidadMateriaPrima" placeholder="Cantidad" class="form-control" />
                </div>

                <div class="col-md-3">
                    <label for="MateriaPrimaSeleccionada">Unidad de Medida</label>
                    <input type="text" name="UnidadMateriaPrima" placeholder="Unidad de medida" class="form-control" />
                </div>

                <div class="col-md-2">
                    <button type="button" class="btn btn-danger" onclick="eliminarFila(this)">Eliminar</button>
                </div>
            </div>
            <button type="button" class="btn btn-custom-pink mt-2" onclick="agregarFila('materias_primas-container', 'template-materia_prima')">+ Agregar Materia Prima</button>
        </div>
        <br />

        <h4>Productos Preparados Utilizados</h4>
        <div id="productos_preparados-container">
            <div class="row fila-insumo template-producto_preparado" style="display: none;">
                <div class="col-md-4">
                    <label for="ProductoPreparadoSeleccionado">Nombre</label>
                    @Html.DropDownList("ProductoPreparadoSeleccionado", ViewBag.ProductosPreparados as SelectList, "Seleccione un producto preparado", new { @class = "form-control" })
                </div>

                <div class="col-md-3">
                    <label for="MateriaPrimaSeleccionada">Cantidad</label>
                    <input type="number" name="CantidadProductoPreparado" placeholder="Cantidad" class="form-control" />
                </div>

                <div class="col-md-3">
                    <label for="MateriaPrimaSeleccionada">Unidad de Medida</label>
                    <input type="text" name="UnidadProductoPreparado" placeholder="Unidad de medida" class="form-control" />
                </div>

                <div class="col-md-2">
                    <button type="button" class="btn btn-danger" onclick="eliminarFila(this)">Eliminar</button>
                </div>
            </div>
            <button type="button" class="btn btn-custom-pink mt-2" onclick="agregarFila('productos_preparados-container', 'template-producto_preparado')">+ Agregar Producto Preparado</button>
        </div>
        <br />

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
            <button type="reset" class="btn btn-danger me-md-2">Cancelar</button>
            <button type="submit" class="btn btn-custom-pink">@textoBoton</button>
        </div>
    }
</div>

<!-- Listado -->
<div class="container">
    <h4><strong>Listado de Recetas</strong></h4>
    @if (ViewBag.Lista == null || (ViewBag.Lista as List<Proyecto_CreandoRecuerdos.Models.RecetaCosto>)?.Count == 0)
    {
        <div class="alert alert-info text-center" style="margin: 1rem 0;">
            @if (!string.IsNullOrEmpty(ViewBag.Search as string))
            {
                <span>No se encontraron coincidencias.</span>
            }
            else
            {
                <span>No hay recetas registradas.</span>
            }
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-sm text-center">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Porción</th>
                        <th>Materias Primas Utilizadas</th>
                        <th>Productos Preparados Utilizados</th>
                        <th>Costo por unidad de medida (₡)</th>
                        <th>Total Costo (₡)</th>
                        <th>Costo Total de Receta (₡)</th>
                        <th>Costo por porción (₡)</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var receta in ViewBag.Lista as List<Proyecto_CreandoRecuerdos.Models.RecetaCosto>)
                    {
                        <tr>
                            <td>@receta.nombre</td>

                            <td>@receta.porcion</td>

                            <td>
                                @foreach (var materia_prima in receta.MateriasPrimasUtilizadas)
                                {
                                    <div>@materia_prima.nombre (@materia_prima.cantidad @materia_prima.unidad_de_medida)</div>
                                }
                            </td>

                            <td>
                                @foreach (var producto_preparado in receta.ProductosPreparadosUtilizados)
                                {
                                    <div>@producto_preparado.nombre (@producto_preparado.cantidad @producto_preparado.unidad_de_medida)</div>
                                }
                            </td>

                            <td>
                                @foreach (var materia_prima in receta.MateriasPrimasUtilizadas)
                                {
                                    <div>@materia_prima.costo_por_cantidad.ToString("₡")</div>
                                }

                                @foreach (var producto_preparado in receta.ProductosPreparadosUtilizados)
                                {
                                    <div>@producto_preparado.costo_por_cantidad.ToString("₡")</div>
                                }
                            </td>

                            <td>
                                @foreach (var materia_prima in receta.MateriasPrimasUtilizadas)
                                {
                                    var totalcostoMateriaprima = materia_prima.cantidad * materia_prima.costo_por_cantidad;
                                    <div>Total Costo Materia Prima: @totalcostoMateriaprima.ToString("₡")</div>
                                }

                                @foreach (var producto_preparado in receta.ProductosPreparadosUtilizados)
                                {
                                    var totalcostoProductopreparado = producto_preparado.cantidad * producto_preparado.costo_por_cantidad;
                                    <div>Total Costo Producto Preparado: @totalcostoProductopreparado.ToString("₡")</div>
                                }
                            </td>

                            <td>@receta.costo_total_receta.ToString("₡")</td>
                            <td>@receta.costo_por_porcion.ToString("₡")</td>

                            <td>
                                <a href="@Url.Action("EditarReceta", "Insumos", new { id = receta.id })" class="btn btn-custom-pink btn-sm">Editar</a>
                                <a href="@Url.Action("EliminarReceta", "Insumos", new { id = receta.id })" class="btn btn-danger btn-sm btn-eliminar" data-url="@Url.Action("EliminarReceta", "Insumos", new { id = receta.id })">Eliminar</a>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        $('form').on('submit', function (e) {
            var valido = true;
            var mensaje = "";

            // Validar campos de texto
            $(this).find('input[type="text"]').each(function () {
                var valor = $(this).val();
                if (!valor || valor.trim().length === 0) {
                    valido = false;
                    mensaje = "No se permiten campos de texto vacíos o solo espacios en blanco.";
                    $(this).focus();
                    return false;
                }
            });

            // Validar campos numéricos
            if (valido) {
                $(this).find('input[type="number"]').each(function () {
                    var valor = $(this).val();
                    if (!/^\d+(\.\d+)?$/.test(valor) || parseFloat(valor) <= 0) {
                        valido = false;
                        mensaje = "Los campos numéricos deben ser mayores a cero y solo aceptar números positivos.";
                        $(this).focus();
                        return false;
                    }
                });
            }

            // Validar nombre duplicado
            var nombre = $('#nombre').val().toLowerCase();
            var id = $('#id').val();
            if (nombresExistentes.includes(nombre)) {
                valido = false;
                mensaje = "Ya existe una receta con ese nombre.";
                $('#nombre').focus();
            }

            if (!valido) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Validación',
                    text: mensaje,
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#E27AB0'
                });
                return false;
            }

            e.preventDefault();
            var data = $(this).serialize();
            $.post($(this).attr('action'), data)
                .done(function () { location.reload(); })
                .fail(function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al guardar en la base de datos',
                        confirmButtonText: 'Aceptar',
                        confirmButtonColor: '#E27AB0'
                    });
                });
        });

        @if (TempData["SuccessMessage"] != null)
        {
            <text>
             Swal.fire({
                 icon: 'success',
                 text: '@TempData["SuccessMessage"]',
                 confirmButtonColor: '#E27AB0'
             });
            </text>
        }

        $(document).on('click', '.btn-eliminar', function (e) {
            e.preventDefault();
            var url = $(this).data('url');

            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡Esta acción no se puede deshacer!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#E27AB0',
                cancelButtonColor: '#e74c3c',
                confirmButtonText: 'Aceptar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = url;
                }
            });
        });
    </script>

    <script>
        // Datos de catálogo para cálculos en JS
        var materiasPrimas = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.MateriasPrimas?.Select(mp => new { mp.nombre, mp.costo_por_gramo })));
        var productosPreparados = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductosPreparados?.Select(pp => new { pp.nombre, pp.costo_por_peso })));

        function obtenerCostoPorGramo(nombre) {
            var found = materiasPrimas.find(x => x.nombre === nombre);
            return found ? parseFloat(found.costo_por_gramo) : 0;
        }
        function obtenerCostoPorPeso(nombre) {
            var found = productosPreparados.find(x => x.nombre === nombre);
            return found ? parseFloat(found.costo_por_peso) : 0;
        }

        function calcularCostos() {
            var total = 0;
            $('#materias_primas-container .fila-insumo:not(.template-materia_prima)').each(function () {
                var nombre = $(this).find('select[name="MateriaPrimaSeleccionada"]').val();
                var cantidad = parseFloat($(this).find('input[name="CantidadMateriaPrima"]').val()) || 0;
                var costo = obtenerCostoPorGramo(nombre);
                total += cantidad * costo;
            });
            $('#productos_preparados-container .fila-insumo:not(.template-producto_preparado)').each(function () {
                var nombre = $(this).find('select[name="ProductoPreparadoSeleccionado"]').val();
                var cantidad = parseFloat($(this).find('input[name="CantidadProductoPreparado"]').val()) || 0;
                var costo = obtenerCostoPorPeso(nombre);
                total += cantidad * costo;
            });
            $('#costoTotalReceta').text(total.toFixed(2));
            var porcion = parseFloat($('#porcion').val()) || 0;
            var costoPorPorcion = porcion > 0 ? total / porcion : 0;
            $('#costoPorPorcion').text(costoPorPorcion.toFixed(4));
        }

        function agregarFila(containerId, templateClass) {
            var container = document.getElementById(containerId);
            var nuevaFila = document.querySelector('.' + templateClass).cloneNode(true);
            nuevaFila.style.display = '';
            container.appendChild(nuevaFila);
        }
        function eliminarFila(boton) {
            var fila = boton.closest(".fila-insumo");
            if (fila && fila.parentElement.children.length > 1) {
                fila.remove();
            }
        }

        $(document).on('input change', '#materias_primas-container input, #materias_primas-container select, #productos_preparados-container input, #productos_preparados-container select, #porcion', calcularCostos);
        $(document).ready(calcularCostos);
    </script>
}